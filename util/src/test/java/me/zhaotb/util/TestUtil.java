package me.zhaotb.util;

import me.zhaotb.framework.util.FileUtil;
import me.zhaotb.framework.util.OutOfDiskSpaceException;
import me.zhaotb.framework.util.StringUtil;
import me.zhaotb.framework.util.ZipUtil;
import org.apache.commons.net.ftp.FTPClient;
import org.junit.Test;
import sun.misc.BASE64Encoder;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.math.BigInteger;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Arrays;
import java.util.Base64;
import java.util.HashSet;

/**
 * @author zhaotangbo
 * @date 2018/11/28
 */
public class TestUtil {

    @Test
    public void testMatchStr(){
        boolean m = StringUtil.matchStr("abcdefg", "abc*f");
        System.out.println(m);
    }

    @Test
    public void names() throws IOException {
        String s = FileUtil.uniqueName("F:\\tmp\\enterbill\\UNACCT_ITEM_20181201_200_0.txt");
        System.out.println(s);
        new File(s).createNewFile();
        s = FileUtil.uniqueName(s);
        System.out.println(s);
    }

    @Test
    public void t(){
        System.out.println(1 << 20);
        System.out.println((7396939 / (1 << 20)));

        System.out.println(64 * (7396939 / (1 << 20)) );
    }

    @Test
    public void testMove(){
        File f = new File("F:\\tmp\\enterbill\\UNACCT_ITEM_20181201_200_0.txt");
        File df = new File("F:\\tmp\\enterbill\\move\\UNACCT_ITEM_20181201_200_0.txt");
        try {
            boolean move = FileUtil.move(df, f);
            System.out.println(move);
        } catch (OutOfDiskSpaceException e) {
            e.printStackTrace();
        }
    }

    @Test
    public void testZip() throws IOException {
        ZipUtil.zip("F:\\output", "F:\\", "output_test", true);
    }

    @Test
    public void testEq() {
        String left = "F:\\output";
        String right = "F:\\output_test";
        File leftFile = new File(left);
        File rightFile = new File(right);
        HashSet<File> leftFileSet = new HashSet<>();
        HashSet<File> rightFileSet = new HashSet<>();
        listAll(leftFileSet, leftFile);
        listAll(rightFileSet, rightFile);

        compare(leftFileSet, rightFileSet);
    }

    private void compare(HashSet<File> leftFileSet, HashSet<File> rightFileSet) {
        int eqCount = 0;
        int errCount = 0;
        HashSet<String> eqSet = new HashSet<>();
        HashSet<String> errSet = new HashSet<>();
        for (File lf : leftFileSet) {
            for (File rf : rightFileSet) {
                if (lf.getName().equals(rf.getName())) {
                    try (FileInputStream lIn = new FileInputStream(lf);
                         FileInputStream rIn = new FileInputStream(rf)) {

                        int lByte;
                        int rByte;
                        while ((lByte = lIn.read()) > -1) {
                            rByte = rIn.read();
                            if (lByte != rByte) {
                                System.out.println("文件不一致: " + lf.getAbsolutePath() + " & " + rf.getAbsolutePath());
                                break;
                            }
                        }
                        eqCount++;
                        eqSet.add(lf.getAbsolutePath());
                        System.out.println("文件一致: " + lf.getAbsolutePath());
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                }
            }
            errCount++;
            errSet.add(lf.getAbsolutePath());
        }

        System.out.println("eqCount = " + eqCount);
        System.out.println("eqSet = " + eqSet);
        System.out.println("errCount = " + errCount);
        System.out.println("errSet = " + errSet);
    }

    private void listAll(HashSet<File> set, File file) {
        if (file.isDirectory()) {
            File[] files = file.listFiles();
            for (File f : files) {
                listAll(set, f);
            }
        } else {
            set.add(file);
        }
    }


    @Test
    public void zipStr() throws IOException {
        String str = "我与父亲不相见已二年余了，我最不能忘记的是他的背影。那年冬天，祖母死了，父亲的差使也交卸了，正是祸不单行的日子，我从北京到徐州，打算跟着父亲奔丧回家。到徐州见着父亲，看见满院狼藉的东西，又想起祖母，不禁簌簌地流下眼泪。父亲说，“事已如此，不必难过，好在天无绝人之路！”";
        str += str;
        str += str;
        System.out.println("原字符串: " + str);
        System.out.println("字节数: " + str.getBytes().length);
        String encode = new BASE64Encoder().encode(str.getBytes());
        System.out.println("原字符串BASE64编码后:");
        System.out.println(encode);
        System.out.println("字节数:" + encode.getBytes().length);
        String zip = ZipUtil.gzip(str);
        System.out.println("压缩后BASE64编码后:");
        System.out.println(zip);
        System.out.println("字节数:" + zip.getBytes().length);
        System.out.println("压缩字节数: " + (encode.getBytes().length - zip.getBytes().length));
        System.out.println("压缩率: " + 1.0 * ((encode.getBytes().length - zip.getBytes().length)) / encode.getBytes().length);
        String gunzip = ZipUtil.ungzip(zip);
        System.out.println(gunzip);

    }

    @Test
    public void zip16() {
        String str = "鲸abv";
        char[] chars = "0123456789ABCDEF".toCharArray();
        StringBuilder builder = new StringBuilder();
        byte[] bs = str.getBytes();
        int bit;
        for (int i = 0; i < bs.length; i++) {
            int i1 = bs[i] & 0x0f0;
            bit = i1 >> 4;
            builder.append(chars[bit]);
            bit = bs[i] & 0x0f;
            builder.append(chars[bit]);
            builder.append(' ');
        }
        System.out.println(builder.toString().trim());

        String s = builder.toString();
        byte b = 127;
        byte a = -128;

    }

    @Test
    public void math() {
        System.out.println(-0.179258);
        DecimalFormat format = new DecimalFormat("0.##E0");
        System.out.println(format.format(-0.179658));

    }

    @Test
    public void testFtp() throws Exception {
        FTPClient client = new FTPClient();
        client.connect("132.121.127.133", 30003);
        client.login("test_acctfs", "test123456");

        client.enterLocalPassiveMode();

        client.changeWorkingDirectory("datafiles/assembleitem/item/");
        String s = client.printWorkingDirectory();
        System.out.println(s);

        String[] strings = client.listNames();
        System.out.println(Arrays.toString(strings));

        client.changeToParentDirectory();
        s = client.printWorkingDirectory();
        System.out.println(s);

        client.logout();
        client.disconnect();

    }


    @Test
    public void testBig() {
        BigInteger integer1 = new BigInteger("123456789101234567891111111812365676879888234234234234234234324238123" +
                "4567891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798" +
                "8823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910" +
                "1234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234" +
                "2342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678" +
                "9111111181236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423" +
                "4234324238123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111" +
                "81236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423" +
                "8123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676" +
                "8798882342342342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567" +
                "891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798882" +
                "3423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910123" +
                "4567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234234" +
                "2342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678911" +
                "4567891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798" +
                "8823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910" +
                "1234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234" +
                "2342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678" +
                "9111111181236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423" +
                "4234324238123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111" +
                "81236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423" +
                "8123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676" +
                "8798882342342342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567" +
                "891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798882" +
                "3423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910123" +
                "4567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234234" +
                "2342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678911" +
                "4567891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798" +
                "8823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910" +
                "1234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234" +
                "2342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678" +
                "9111111181236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423" +
                "4234324238123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111" +
                "81236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423" +
                "8123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676" +
                "8798882342342342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567" +
                "891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798882" +
                "3423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910123" +
                "4567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234234" +
                "2342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678911" +
                "4567891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798" +
                "8823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910" +
                "1234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234" +
                "2342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678" +
                "9111111181236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423" +
                "4234324238123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111" +
                "81236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423" +
                "8123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676" +
                "8798882342342342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567" +
                "891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798882" +
                "3423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910123" +
                "4567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234234" +
                "2342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678911" +
                "4567891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798" +
                "8823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910" +
                "1234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234" +
                "2342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678" +
                "9111111181236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423" +
                "4234324238123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111" +
                "81236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423" +
                "8123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676" +
                "8798882342342342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567" +
                "891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798882" +
                "3423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910123" +
                "4567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234234" +
                "2342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678911" +
                "4567891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798" +
                "8823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910" +
                "1234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234" +
                "2342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678" +
                "9111111181236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423" +
                "4234324238123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111" +
                "81236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423" +
                "8123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676" +
                "8798882342342342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567" +
                "891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798882" +
                "3423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910123" +
                "4567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234234" +
                "2342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678911" +
                "4567891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798" +
                "8823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910" +
                "1234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234" +
                "2342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678" +
                "9111111181236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423" +
                "4234324238123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111" +
                "81236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423" +
                "8123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676" +
                "8798882342342342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567" +
                "891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798882" +
                "3423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910123" +
                "4567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234234" +
                "2342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678911" +
                "1111181236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423423" +
                "4324238123456789101234567891111111812365676879888234234234234234234324238");
        BigInteger integer2 =new BigInteger("123456789101234567891111111812365676879888234234234234234234324238123" +
                "4567891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798" +
                "8823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910" +
                "1234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234" +
                "2342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678" +
                "9111111181236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423" +
                "4234324238123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111" +
                "81236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423" +
                "8123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676" +
                "8798882342342342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567" +
                "891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798882" +
                "3423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910123" +
                "4567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234234" +
                "2342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678911" +
                "4567891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798" +
                "8823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910" +
                "1234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234" +
                "2342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678" +
                "9111111181236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423" +
                "4234324238123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111" +
                "81236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423" +
                "8123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676" +
                "8798882342342342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567" +
                "891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798882" +
                "3423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910123" +
                "4567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234234" +
                "2342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678911" +
                "4567891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798" +
                "8823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910" +
                "1234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234" +
                "2342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678" +
                "9111111181236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423" +
                "4234324238123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111" +
                "81236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423" +
                "8123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676" +
                "8798882342342342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567" +
                "891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798882" +
                "3423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910123" +
                "4567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234234" +
                "2342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678911" +
                "4567891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798" +
                "8823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910" +
                "1234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234" +
                "2342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678" +
                "9111111181236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423" +
                "4234324238123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111" +
                "81236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423" +
                "8123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676" +
                "8798882342342342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567" +
                "891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798882" +
                "3423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910123" +
                "4567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234234" +
                "2342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678911" +
                "4567891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798" +
                "8823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910" +
                "1234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234" +
                "2342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678" +
                "9111111181236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423" +
                "4234324238123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111" +
                "81236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423" +
                "8123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676" +
                "8798882342342342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567" +
                "891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798882" +
                "3423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910123" +
                "4567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234234" +
                "2342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678911" +
                "4567891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798" +
                "8823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910" +
                "1234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234" +
                "2342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678" +
                "9111111181236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423" +
                "4234324238123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111" +
                "81236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423" +
                "8123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676" +
                "8798882342342342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567" +
                "891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798882" +
                "3423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910123" +
                "4567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234234" +
                "2342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678911" +
                "4567891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798" +
                "8823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910" +
                "1234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234" +
                "2342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678" +
                "9111111181236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423" +
                "4234324238123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111" +
                "81236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423423432423" +
                "8123456789101234567891111111812365676879888234234234234234234324238123456789101234567891111111812365676" +
                "8798882342342342342342343242381234567891012345678911111118123656768798882342342342342342343242381234567" +
                "891012345678911111118123656768798882342342342342342343242381234567891012345678911111118123656768798882" +
                "3423423423423423432423812345678910123456789111111181236567687988823423423423423423432423812345678910123" +
                "4567891111111812365676879888234234234234234234324238123456789101234567891111111812365676879888234234234" +
                "2342342343242381234567891012345678911111118123656768798882342342342342342343242381234567891012345678911" +
                "1111181236567687988823423423423423423432423812345678910123456789111111181236567687988823423423423423423" +
                "4324238123456789101234567891111111812365676879888234234234234234234324238");
        BigInteger add = integer1.add(integer2);
        System.out.println(add);
        System.out.println(integer1.multiply(integer2));

        System.out.println((1L << 32));
    }
}
